import("//build/toolchain/gcc_toolchain.gni")

# TODO(tim): This isn't optimal yet

declare_args() {
  # Path of the GCC C compiler executable.
  gcc_cc = "gcc"

  # Path of the GCC C++ compiler executable.
  gcc_cxx = "g++"

  # Path of the Clang C compiler executable.
  clang_cc = "clang"

  # Path of the Clang C++ compiler executable.
  clang_cxx = "clang++"

  # Path of the 'readelf' utility.
  readelf = "readelf"

  # Path of the 'ar' utility.
  ar = "ar"

  # Path of the 'nm' utility.
  nm = "nm"
}

gcc_toolchain("clang_x86") {
  cc = clang_cc
  cxx = clang_cxx
  ld = cxx

  readelf = readelf
  ar = ar
  nm = nm

  toolchain_args = {
    current_cpu = "x86"
    current_os = target_os
    is_clang = true
  }
}

gcc_toolchain("x86") {
  cc = gcc_cc
  cxx = gcc_cxx
  ld = cxx

  readelf = readelf
  ar = ar
  nm = nm

  toolchain_args = {
    current_cpu = "x86"
    current_os = target_os
    is_clang = false
  }
}

gcc_toolchain("clang_x64") {
  cc = clang_cc
  cxx = clang_cxx
  ld = cxx

  readelf = readelf
  ar = ar
  nm = nm

  toolchain_args = {
    current_cpu = "x64"
    current_os = target_os
    is_clang = true
  }
}

gcc_toolchain("x64") {
  cc = gcc_cc
  cxx = gcc_cxx
  ld = cxx

  readelf = readelf
  ar = ar
  nm = nm

  toolchain_args = {
    current_cpu = "x64"
    current_os = target_os
    is_clang = false
  }
}
